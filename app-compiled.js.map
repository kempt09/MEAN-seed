{"version":3,"sources":["app.js"],"names":[],"mappings":"AAAA,IAAI,UAAU,QAAQ,SAAR,CAAV;AACJ,IAAI,OAAO,QAAQ,MAAR,CAAP;AACJ,IAAI,SAAS,QAAQ,QAAR,CAAT;AACJ,IAAI,SAAS,QAAQ,iBAAR,CAAT;AACJ,IAAI,eAAe,QAAQ,eAAR,CAAf;AACJ,IAAI,aAAa,QAAQ,aAAR,CAAb;AACJ,IAAI,SAAS,QAAQ,kBAAR,CAAT;AACJ,IAAI,WAAW,QAAQ,UAAR,CAAX;AACJ,IAAI,MAAM,SAAN;;AAEJ;;;AAGA,IAAI,GAAJ,CAAQ,QAAQ,MAAR,CAAe,YAAY,SAAZ,CAAvB;AACA,IAAI,GAAJ,CAAQ,OAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,WAAW,UAAX,CAAsB,EAAE,UAAU,IAAV,EAAxB,CAAR;AACA,IAAI,GAAJ,CAAQ,cAAR;;;AAGA,IAAI,GAAJ,CAAQ,GAAR,EAAa,MAAb;AACA,IAAI,GAAJ,CAAQ,MAAR,EAAgB,MAAhB;;;;AAIA,SAAS,OAAT,CAAiB,oEAAjB;;;AAoBA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAC/B,MAAI,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAN,CAD2B;AAE/B,MAAI,MAAJ,GAAa,GAAb,CAF+B;AAG/B,OAAK,GAAL,EAH+B;CAAzB,CAAR;;;;;;AAUA,IAAI,IAAI,GAAJ,CAAQ,KAAR,MAAmB,aAAnB,EAAkC;AACpC,MAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AACpC,QAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAd,CAAX,CADoC;AAEpC,QAAI,MAAJ,CAAW,OAAX,EAAoB;AAClB,eAAS,IAAI,OAAJ;AACT,aAAO,GAAP;KAFF,EAFoC;GAA9B,CAAR,CADoC;CAAtC;;;;AAYA,IAAI,GAAJ,CAAQ,UAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AACpC,MAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAd,CAAX,CADoC;AAEpC,MAAI,MAAJ,CAAW,OAAX,EAAoB;AAClB,aAAS,IAAI,OAAJ;AACT,WAAO,EAAP;GAFF,EAFoC;CAA9B,CAAR;;AASA,OAAO,OAAP,GAAiB,GAAjB","file":"app-compiled.js","sourcesContent":["var express = require('express');\nvar path = require('path');\nvar logger = require('morgan');\nvar router = require('./routes/router');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar lyrics = require('./modules/lyrics');\nvar mongoose = require('mongoose');\nvar app = express();\n\nlyrics(); // random line from my favorite song!!!\n\n// view engine setup\napp.use(express.static(__dirname + '/public'));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(cookieParser());\n\n// Router Setup\napp.use('/', router); // Handles all of the front end\napp.use('/api', router); // Handles all of the API calls\n\n// DB Setup\n// Enter your MongoDB URI\nmongoose.connect('mongodb://<user>:<password>@<example>.mlab.com:<example>/<example>');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// production error handler\n// no stack traces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n"]}